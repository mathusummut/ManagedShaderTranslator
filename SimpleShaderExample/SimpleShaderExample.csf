#version 130
precision highp float;
// FragmentShader
uniform float _v2;
in vec2 _v0;
in vec4 _v1;
out vec4 _v4;

vec4 _v5(vec4 v);

void _v6()
{
	_v4 = _v5(vec4(_v0, _v2, 1.0f));
}

void main()
{
    _v6();
}
//end
#version 130
// VertexShader
uniform float _v2;
out vec2 _v0;
out vec4 _v1;
in vec4 _v3;


void _v7()
{
	_v0 = ((_v3.xy + vec2(1.0f)) * 0.5f);
	_v1 = _v3;
}

void main()
{
    _v7();
    gl_Position = _v1;
}
//end
#version 130
precision highp float;
// FragmentShader
uniform vec4 _v8;


vec4 _v5(vec4 v)
{
	return ((_v8 - (_v8 * v)) + ((vec4(1.0f) - _v8) * v));
}

//end
#version 130
// VertexShader
uniform vec4 _v8;


vec4 _v5(vec4 v)
{
	return ((_v8 - (_v8 * v)) + ((vec4(1.0f) - _v8) * v));
}

//end
